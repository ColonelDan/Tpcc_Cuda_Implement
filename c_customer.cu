#include <stdio.h>  
#include <string.h>  
#include <stdlib.h>

#define CUS_MAX_SIZE 300000
#define CUS_MAX_LENGTH 800

#include "tpcc_table.h"

int get_customer(struct customer *p_customer_arr){ //?????????????????????????????????
	char file_name[] = "./csv/c_customer.csv";  //?????????????????????????????????
    FILE *fp;  
    fp = fopen(file_name, "r");  
      
    if (!fp) {  
        fprintf(stderr, "failed to open file for reading\n");  
        return -1;  
    }
    
    char c;
    int i=0;
    int index=0;
    
    char **record_arr;
    record_arr=(char **)malloc(CUS_MAX_SIZE*sizeof(char *));
    record_arr[index]=(char *)malloc(CUS_MAX_LENGTH*sizeof(char));
    
    while(1){
      c=fgetc(fp);
      if(c==EOF){
        break;
      }
      if(c=='\n'){
        record_arr[index][i++]='\0';
        index++;
        record_arr[index]=(char *)malloc(CUS_MAX_LENGTH*sizeof(char));
        i=0;
      }else{
        if(c!='"'){
          record_arr[index][i++]=c;
        }
      }
    }

//    *p_customer_arr=(struct customer *)malloc((index-1)*sizeof(struct customer));//?????????????????????????????????
    
    for(i=1;i<index;i++){
      //printf("%s\n",record_arr[i]);
      char *token;
      
      token=strtok(record_arr[i],",");
      (p_customer_arr)[i-1].C_ID=atol(token);//?????????????????????????????????
      
      token=strtok(NULL,",");
      (p_customer_arr)[i-1].C_D_ID=atol(token);//?????????????????????????????????
      
      token=strtok(NULL,",");
      (p_customer_arr)[i-1].C_W_ID=atol(token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_FIRST,token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_MIDDLE,token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_LAST,token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_STREET_1,token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_STREET_2,token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_CITY,token);//?????????????????????????????????
     
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_STATE,token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_ZIP,token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_PHONE,token);//?????????????????????????????????
      
      token=strtok(NULL,",");
      (p_customer_arr)[i-1].C_SINCE=1189;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_CREDIT,token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_CREDIT_LIM=atof(token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_DISCOUNT=atof(token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_BALANCE=atof(token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_YTD_PAYMENT=atof(token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_PAYMENT_CNT=atof(token);//?????????????????????????????????
	  
	  token=strtok(NULL, ",");
      (p_customer_arr)[i-1].C_DELIVERY_CNT=atof(token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      strcpy((p_customer_arr)[i-1].C_DATA,token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
	free(record_arr[i-1]);
    }
     free(record_arr);
    fclose (fp);  
    
    return index-1;
}
/*
int main(int argc, const char * argv[]) {  
    
    struct customer *customer_arr;//?????????????????????????????????
    int index=get_customer(&customer_arr);//?????????????????????????????????
    int i;
    for(i=1;i<index;i++){ //?????????????????????????????????
		printf("%ld, %ld, %ld, %ld, %s, %s\n",
			customer_arr[i].C_ID,
			customer_arr[i].C_D_ID,
			customer_arr[i].C_W_ID,
			customer_arr[i].C_SINCE,
	  		customer_arr[i].C_STREET_1,
			customer_arr[i].C_ZIP);
	}
	char c;
	scanf("%c", &c);
      
    return 0;  
} */ 
