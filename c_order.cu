#include <stdio.h>  
#include <string.h>  
#include <stdlib.h>

#include "tpcc_table.h"

#define O_MAX_SIZE 90010 
#define O_MAX_LENGTH 100 

int get_order(struct order *p_order_arr){ //?????????????????????????????????
	char file_name[] = "./csv/c_order.csv";  //?????????????????????????????????
    FILE *fp;  
    fp = fopen(file_name, "r");  
      
    if (!fp) {  
        fprintf(stderr, "failed to open file for reading\n");  
        return -1;  
    }
    
    char c;
    int i=0;
    int index=0;
    
    char **record_arr;
    record_arr=(char **)malloc(O_MAX_SIZE*sizeof(char *));
    record_arr[index]=(char *)malloc(O_MAX_LENGTH*sizeof(char));
    
    while(1){
      c=fgetc(fp);
      if(c==EOF){
        break;
      }
      if(c=='\n'){
        record_arr[index][i++]='\0';
        index++;
        record_arr[index]=(char *)malloc(O_MAX_LENGTH*sizeof(char));
        i=0;
      }else{
        if(c!='"'){
          record_arr[index][i++]=c;
        }
      }
    }

//    *p_order_arr=(struct order *)malloc((index-1)*sizeof(struct order));//?????????????????????????????????
    
    for(i=1;i<index;i++){
      //printf("%s\n",record_arr[i]);
      char *token;
      
      token=strtok(record_arr[i],",");
      (p_order_arr)[i-1].O_ID=atol(token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_D_ID=atol(token);//?????????????????????????????????
      
      token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_W_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_C_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_ENTRY_DATE=1189;//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_CARRIER_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_OL_CNT=atoi(token);//???????????????????????????

      token=strtok(NULL, ",");
      (p_order_arr)[i-1].O_ALL_LOCAL=atoi(token);//???????????????????????????

      
      token=strtok(NULL, ",");
      
	free(record_arr[i]);
      //printf("!!!!!!!!!!!!!!!!\n%ld\n%s\n%s\n%s\n%s\n%s\n%s\n%lf\n%lf\n",order_arr[i].W_ID,order_arr[i].W_NAME,
	  //		order_arr[i].W_STREET_1,order_arr[i].W_STREET_2,order_arr[i].W_CITY,order_arr[i].W_STATE,
	  //		order_arr[i].W_ZIP,order_arr[i].W_TAX,order_arr[i].W_YTD);
    }
     free(record_arr);
    fclose (fp);  
    
    return index-1;
}
/*
int main(int argc, const char * argv[]) {  
    
    struct order *order_arr;//?????????????????????????????????
    int index=get_order(&order_arr);//?????????????????????????????????
    int i;
    for(i=1;i<index;i++){ //?????????????????????????????????
		printf("!!!!!!!!!!!!!!!!\n %ld\n %ld\n %ld\n %ld\n %ld\n %ld\n %d\n %d\n",
        order_arr[i].O_ID,
        order_arr[i].O_D_ID,
        order_arr[i].O_W_ID,
        order_arr[i].O_C_ID,
        order_arr[i].O_ENTRY_DATE,
        order_arr[i].O_CARRIER_ID,
        order_arr[i].O_OL_CNT,
        order_arr[i].O_ALL_LOCAL
    );
  }
      
    return 0;  
} i*/ 
