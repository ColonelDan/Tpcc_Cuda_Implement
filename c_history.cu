#include <stdio.h>  
#include <string.h>  
#include <stdlib.h>

#include <stdlib.h>
#include "tpcc_table.h"

#define H_MAX_SIZE 300000
#define H_MAX_LENGTH 100

int get_history(struct history *p_history_arr){ //?????????????????????????????????
	char file_name[] = "./csv/c_history.csv";  //?????????????????????????????????
    FILE *fp;  
    fp = fopen(file_name, "r");  
      
    if (!fp) {  
        fprintf(stderr, "failed to open file for reading\n");  
        return -1;  
    }
    
    char c;
    int i=0;
    int index=0;
    
    char **record_arr;
    record_arr=(char **)malloc(H_MAX_SIZE*sizeof(char *));
    record_arr[index]=(char *)malloc(H_MAX_LENGTH*sizeof(char));
   	
//printf("ok\n");
	 
    while(1){
      c=fgetc(fp);
      if(c==EOF){
        break;
      }
      if(c=='\n'){
        record_arr[index][i++]='\0';
        index++;
        record_arr[index]=(char *)malloc(H_MAX_LENGTH*sizeof(char));
        i=0;
      }else{
        if(c!='"'){
          record_arr[index][i++]=c;
        }
      }
    }
//printf("ok\n");
    //*p_history_arr=(struct history *)malloc((index-1)*sizeof(struct history));//?????????????????????????????????
printf("index: %d\n", index);
    for(i=1;i< index;i++){
      //printf("%s\n",record_arr[i]);
      char *token;
      
      token=strtok(record_arr[i],",");
      (p_history_arr)[i-1].H_C_ID=atol(token);//?????????????????????????????????
//printf("ok1 %ld\n", atol(token));      
      token=strtok(NULL, ",");
//printf("ok2\n");
      (p_history_arr)[i-1].H_C_D_ID=atol(token);//?????????????????????????????????
//printf("ok2 \n");
      token=strtok(NULL, ",");
      (p_history_arr)[i-1].H_C_W_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_history_arr)[i-1].H_D_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_history_arr)[i-1].H_W_ID=atol(token);//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_history_arr)[i-1].H_DATE=1522295599L;//?????????????????????????????????
	  
	    token=strtok(NULL, ",");
      (p_history_arr)[i-1].H_AMOUNT=atof(token);//?????????????????????????????????
	  
      token=strtok(NULL, ",");
      strcpy((p_history_arr)[i-1].H_DATA,token);
      
      token=strtok(NULL, ",");
	free(record_arr[i-1]);
      
	}
     free(record_arr);
    fclose (fp);  
    
    return index-1;
}
/*
int main(int argc, const char * argv[]) {  
    
    struct history *history_arr;//?????????????????????????????????
    int index=get_history(&history_arr);//?????????????????????????????????
    int i;
    for(i=1;i<index;i++){ //?????????????????????????????????
		printf("!!!!!!!!!!!!!!!!\n%ld\n %ld\n %ld\n %ld\n %ld\n %ld\n %lf\n %s\n",
      history_arr[i].H_C_ID,
      history_arr[i].H_C_D_ID,
      history_arr[i].H_C_W_ID,
      history_arr[i].H_D_ID,
      history_arr[i].H_W_ID,
      history_arr[i].H_DATE,
      history_arr[i].H_AMOUNT,
      history_arr[i].H_DATA  
    );
	}
      
    return 0;  
} */ 
